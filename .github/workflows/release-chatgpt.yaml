name: "Prepare release"

on:
  push:
    tags:
      - "release-*"
  workflow_dispatch:
    # allows manual trigger

permissions:
  contents: "write"

env:
  THIRD_PARTY_BASE_DIR: "third-party"
  RELEASE_TAG: "$(date +'%Y-%m-%d')"

jobs:
  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: CMake configure
        run: cmake . -Bbuild -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: make -Cbuild -j$(sysctl -n hw.ncpu) steam_api
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-artifacts
          path: |
            build/libsteam_api.dylib
            build/lobby_connect
            build/generate_interfaces_file

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y build-essential cmake libprotobuf-dev protobuf-compiler
      - name: CMake configure
        run: cmake . -Bbuild -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: make -Cbuild -j$(nproc) steam_api
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifacts
          path: |
            build/libsteam_api.so
            build/lobby_connect
            build/generate_interfaces_file

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install visualstudio2019buildtools -y
          choco install vcpkg -y
      - name: Setup environment
        run: |
          vcpkg install protobuf --triplet x64-windows-static
          vcpkg install protobuf --triplet x86-windows-static
      - name: CMake configure
        run: cmake . -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="C:\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake"
      - name: Build
        run: cmake --build build --config Release
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifacts
          path: |
            build/Release/steam_api.dll
            build/Release/lobby_connect.exe
            build/Release/generate_interfaces_file.exe

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux, build-windows]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: macos-artifacts
          path: macos/
      - uses: actions/download-artifact@v3
        with:
          name: linux-artifacts
          path: linux/
      - uses: actions/download-artifact@v3
        with:
          name: windows-artifacts
          path: windows/
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          files: |
            macos/*
            linux/*
            windows/*
